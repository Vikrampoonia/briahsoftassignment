{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vikra\\\\OneDrive\\\\Desktop\\\\AWS\\\\InternshipAssignment\\\\briahsoftassignment\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport CommitChart from \"./components/CommitChart\";\nimport { fetchAllCommits } from \"./lib/fetchCommits\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [username, setUsername] = useState(\"octocat\"); // default user\n  const [repo, setRepo] = useState(\"Spoon-Knife\"); // example repo\n  const [commits, setCommits] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const getCommits = async () => {\n    setLoading(true);\n    const data = await fetchAllCommits(username, repo);\n    setCommits(data);\n    setLoading(false);\n  };\n  useEffect(() => {\n    getCommits();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading commits...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(CommitChart, {\n      data: commits\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 46\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ZggWdxGIgAEdhXTo5OkhcnTUHkE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","CommitChart","fetchAllCommits","jsxDEV","_jsxDEV","App","_s","username","setUsername","repo","setRepo","commits","setCommits","loading","setLoading","getCommits","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Vikra/OneDrive/Desktop/AWS/InternshipAssignment/briahsoftassignment/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport CommitChart from \"./components/CommitChart\";\nimport { fetchAllCommits, CommitData } from \"./lib/fetchCommits\";\n\nconst App = () => {\n  const [username, setUsername] = useState(\"octocat\"); // default user\n  const [repo, setRepo] = useState(\"Spoon-Knife\"); // example repo\n  const [commits, setCommits] = useState<CommitData[]>([]);\n  const [loading, setLoading] = useState(false);\n\n  const getCommits = async () => {\n    setLoading(true);\n    const data = await fetchAllCommits(username, repo);\n    setCommits(data);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getCommits();\n  }, []);\n\n  return (\n    <div className=\"p-4\">\n      {loading ? <p>Loading commits...</p> : <CommitChart data={commits} />}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,SAASC,eAAe,QAAoB,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;EACrD,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC;EACjD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAe,EAAE,CAAC;EACxD,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMe,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7BD,UAAU,CAAC,IAAI,CAAC;IAChB,MAAME,IAAI,GAAG,MAAMd,eAAe,CAACK,QAAQ,EAAEE,IAAI,CAAC;IAClDG,UAAU,CAACI,IAAI,CAAC;IAChBF,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAEDf,SAAS,CAAC,MAAM;IACdgB,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAKa,SAAS,EAAC,KAAK;IAAAC,QAAA,EACjBL,OAAO,gBAAGT,OAAA;MAAAc,QAAA,EAAG;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAAGlB,OAAA,CAACH,WAAW;MAACe,IAAI,EAAEL;IAAQ;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClE,CAAC;AAEV,CAAC;AAAChB,EAAA,CAtBID,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AAwBT,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}