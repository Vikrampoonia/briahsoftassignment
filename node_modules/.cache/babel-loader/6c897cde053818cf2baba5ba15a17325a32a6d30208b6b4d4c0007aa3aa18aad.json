{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vikra\\\\OneDrive\\\\Desktop\\\\AWS\\\\InternshipAssignment\\\\briahsoftassignment\\\\src\\\\components\\\\CommitChart.tsx\",\n  _s = $RefreshSig$();\nimport { ResponsiveContainer, BarChart, Bar, XAxis, YAxis, Tooltip, CartesianGrid } from \"recharts\";\nimport { useState, useMemo } from \"react\";\nimport { Label } from \"./ui/label\";\nimport { Select, SelectTrigger, SelectValue, SelectContent, SelectItem } from \"./ui/select\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommitChart = ({\n  data\n}) => {\n  _s();\n  const years = useMemo(() => {\n    const uniqueYears = new Set();\n    data.forEach(({\n      date\n    }) => {\n      uniqueYears.add(date.slice(0, 4));\n    });\n    return Array.from(uniqueYears).sort();\n  }, [data]);\n  const [selectedYear, setSelectedYear] = useState(years[0]);\n  const monthlyData = useMemo(() => {\n    const monthMap = {};\n    data.forEach(({\n      date,\n      count\n    }) => {\n      if (date.startsWith(selectedYear)) {\n        const month = date.slice(0, 7); // YYYY-MM\n        monthMap[month] = (monthMap[month] || 0) + count;\n      }\n    });\n    const months = Array.from({\n      length: 12\n    }, (_, i) => {\n      const month = `${selectedYear}-${String(i + 1).padStart(2, \"0\")}`;\n      return {\n        date: month,\n        count: monthMap[month] || 0\n      };\n    });\n    return months;\n  }, [data, selectedYear]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-6 space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-semibold\",\n        children: \"Monthly Commits\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-2 items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Select Year:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: selectedYear,\n          onValueChange: setSelectedYear,\n          children: [/*#__PURE__*/_jsxDEV(SelectTrigger, {\n            className: \"w-[120px]\",\n            children: /*#__PURE__*/_jsxDEV(SelectValue, {\n              placeholder: \"Select year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(SelectContent, {\n            children: years.map(year => /*#__PURE__*/_jsxDEV(SelectItem, {\n              value: year,\n              children: year\n            }, year, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 350,\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        data: monthlyData,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          allowDecimals: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"count\",\n          fill: \"#4f46e5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 7\n  }, this);\n};\n_s(CommitChart, \"rraC4M8hOQIuYFhqZLL9ud/aSAg=\");\n_c = CommitChart;\nexport default CommitChart;\nvar _c;\n$RefreshReg$(_c, \"CommitChart\");","map":{"version":3,"names":["ResponsiveContainer","BarChart","Bar","XAxis","YAxis","Tooltip","CartesianGrid","useState","useMemo","Label","Select","SelectTrigger","SelectValue","SelectContent","SelectItem","jsxDEV","_jsxDEV","CommitChart","data","_s","years","uniqueYears","Set","forEach","date","add","slice","Array","from","sort","selectedYear","setSelectedYear","monthlyData","monthMap","count","startsWith","month","months","length","_","i","String","padStart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onValueChange","placeholder","map","year","width","height","strokeDasharray","dataKey","allowDecimals","fill","_c","$RefreshReg$"],"sources":["C:/Users/Vikra/OneDrive/Desktop/AWS/InternshipAssignment/briahsoftassignment/src/components/CommitChart.tsx"],"sourcesContent":["import {\r\n    ResponsiveContainer,\r\n    BarChart,\r\n    Bar,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    CartesianGrid,\r\n  } from \"recharts\";\r\n  import { useState, useMemo } from \"react\";\r\n  import { Label } from \"./ui/label\";\r\n  import {\r\n    Select,\r\n    SelectTrigger,\r\n    SelectValue,\r\n    SelectContent,\r\n    SelectItem,\r\n  } from \"./ui/select\";\r\n  \r\n  interface CommitData {\r\n    date: string; // Format: YYYY-MM-DD\r\n    count: number;\r\n  }\r\n  \r\n  interface CommitChartProps {\r\n    data: CommitData[];\r\n  }\r\n  \r\n  const CommitChart: React.FC<CommitChartProps> = ({ data }) => {\r\n    const years = useMemo(() => {\r\n      const uniqueYears = new Set<string>();\r\n      data.forEach(({ date }) => {\r\n        uniqueYears.add(date.slice(0, 4));\r\n      });\r\n      return Array.from(uniqueYears).sort();\r\n    }, [data]);\r\n  \r\n    const [selectedYear, setSelectedYear] = useState<string>(years[0]);\r\n  \r\n    const monthlyData = useMemo(() => {\r\n      const monthMap: Record<string, number> = {};\r\n  \r\n      data.forEach(({ date, count }) => {\r\n        if (date.startsWith(selectedYear)) {\r\n          const month = date.slice(0, 7); // YYYY-MM\r\n          monthMap[month] = (monthMap[month] || 0) + count;\r\n        }\r\n      });\r\n  \r\n      const months = Array.from({ length: 12 }, (_, i) => {\r\n        const month = `${selectedYear}-${String(i + 1).padStart(2, \"0\")}`;\r\n        return {\r\n          date: month,\r\n          count: monthMap[month] || 0,\r\n        };\r\n      });\r\n  \r\n      return months;\r\n    }, [data, selectedYear]);\r\n  \r\n    return (\r\n      <div className=\"mt-6 space-y-4\">\r\n        <div className=\"flex items-center justify-between gap-2\">\r\n          <h2 className=\"text-lg font-semibold\">Monthly Commits</h2>\r\n          <div className=\"flex gap-2 items-center\">\r\n            <Label>Select Year:</Label>\r\n            <Select value={selectedYear} onValueChange={setSelectedYear}>\r\n              <SelectTrigger className=\"w-[120px]\">\r\n                <SelectValue placeholder=\"Select year\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                {years.map((year) => (\r\n                  <SelectItem key={year} value={year}>\r\n                    {year}\r\n                  </SelectItem>\r\n                ))}\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n        </div>\r\n  \r\n        <ResponsiveContainer width=\"100%\" height={350}>\r\n          <BarChart data={monthlyData}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"date\" />\r\n            <YAxis allowDecimals={false} />\r\n            <Tooltip />\r\n            <Bar dataKey=\"count\" fill=\"#4f46e5\" />\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default CommitChart;\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}